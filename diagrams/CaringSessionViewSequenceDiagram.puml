@startuml CaringSessionViewSequence
!include style.puml
skinparam ArrowFontStyle plain

box UI MODEL_COLOR_T1
participant ":CaringSessionPanel" as CaringSessionPanel MODEL_COLOR
participant ":GroupedCaringSessionCell" as GroupedCaringSessionCell MODEL_COLOR
participant ":CaringSessionCard" as CaringSessionCard MODEL_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "p:Patient" as Patient MODEL_COLOR
participant "ps:PatientCaringSession" as PatientCaringSession MODEL_COLOR
end box

[-> CaringSessionPanel : rebuildFromPatients(model)
activate CaringSessionPanel

CaringSessionPanel -> Model : getFilteredPatientList()
activate Model
Model --> CaringSessionPanel : ObservableList<Patient>
deactivate Model

loop for each Patient
    CaringSessionPanel -> Patient : getCaringSessionList()
    activate Patient
    Patient --> CaringSessionPanel : List<CaringSession>
    deactivate Patient

    loop for each CaringSession
        CaringSessionPanel -> PatientCaringSession : create(patient, session)
        activate PatientCaringSession
        PatientCaringSession --> CaringSessionPanel
        deactivate PatientCaringSession
    end
end

CaringSessionPanel -> CaringSessionPanel : sort and group by Date
CaringSessionPanel -> GroupedCaringSessionCell : display(flattenedItems)
activate GroupedCaringSessionCell

alt item is DateHeader
    GroupedCaringSessionCell -> GroupedCaringSessionCell : renderDateHeader()
else item is PatientCaringSession
    create CaringSessionCard
    GroupedCaringSessionCell -> CaringSessionCard : render(session)
end
deactivate GroupedCaringSessionCell

[<-- CaringSessionPanel
deactivate CaringSessionPanel
@enduml
